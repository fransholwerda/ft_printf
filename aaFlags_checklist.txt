BONUS
`#'          The value should be converted to an ``alternate form''.
For c, d, i, n, p, s, and u conversions, this option has
no effect.  For o conversions, the precision of the num-
ber is increased to force the first character of the
output string to a zero.  For x and X conversions, a
non-zero result has the string `0x' (or `0X' for X con-
versions) prepended to it.  For a, A, e, E, f, F, g, and
G conversions, the result will always contain a decimal
point, even if no digits follow it (normally, a decimal
point appears in the results of those conversions only
if a digit follows).  For g and G conversions, trailing
zeros are not removed from the result as they would oth-
erwise be.


`0' (zero)   Zero padding.  For all conversions except n, the con-
verted value is padded on the left with zeros rather
than blanks.  If a precision is given with a numeric
conversion (d, i, o, u, i, x, and X), the 0 flag is
ignored.


`-'          A negative field width flag; the converted value is to
be left adjusted on the field boundary.  Except for n
conversions, the converted value is padded on the right
with blanks, rather than on the left with blanks or
zeros.  A - overrides a 0 if both are given.


BONUS
` ' (space)  A blank should be left before a positive number produced
by a signed conversion (a, A, d, e, E, f, F, g, G, or
i).


BONUS
`+'          A sign must always be placed before a number produced by
a signed conversion.  A + overrides a space if both are
used.


`.'			 An optional precision, in the form of a period . followed by an
optional digit string.  If the digit string is omitted, the precision
is taken as zero.  This gives the minimum number of digits to appear
for d, i, o, u, x, and X conversions, the number of digits to appear
after the decimal-point for a, A, e, E, f, and F conversions, the
maximum number of significant digits for g and G conversions, or the
maximum number of characters to be printed from a string for s con-
versions.


`*'			 A character that specifies the type of conversion to be applied.

A field width or precision, or both, may be indicated by an asterisk `*'
or an asterisk followed by one or more decimal digits and a `$' instead
of a digit string.  In this case, an int argument supplies the field
width or precision.  A negative field width is treated as a left adjust-
ment flag followed by a positive field width; a negative precision is
treated as though it were missing.  If a single format directive mixes
positional (nn$) and non-positional arguments, the results are undefined.


BONUS
An optional length modifier, that specifies the size of the argument.
The following length modifiers are valid for the d, i, n, o, u, x, or
X conversion:

Modifier          d, i           o, u, x, X            n
hh                signed char    unsigned char         signed char *
h                 short          unsigned short        short *
l (ell)           long           unsigned long         long *
ll (ell ell)      long long      unsigned long long    long long *


